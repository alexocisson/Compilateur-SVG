Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programme
Rule 1     programme -> statement
Rule 2     programme -> statement ; programme
Rule 3     statement -> assignation
Rule 4     statement -> structure
Rule 5     statement -> figure
Rule 6     pinceau -> PINCEAU ( parametreCouleur , parametreCouleur , expression )
Rule 7     figure -> FIGURE ( expression , expression , expression , expression )
Rule 8     figure -> FIGURE ( expression , expression , expression , expression , parametrePinceau )
Rule 9     couleur -> COULEUR
Rule 10    couleur -> [ expression , expression , expression ]
Rule 11    parametre -> NUMBER
Rule 12    parametre -> IDENTIFIER
Rule 13    parametre -> expression
Rule 14    parametreCouleur -> parametre
Rule 15    parametreCouleur -> couleur
Rule 16    parametrePinceau -> parametre
Rule 17    parametrePinceau -> pinceau
Rule 18    statement -> PRINT expression
Rule 19    structure -> WHILE expression { programme }
Rule 20    expression -> expression ADD_OP expression
Rule 21    expression -> expression MUL_OP expression
Rule 22    expression -> NUMBER
Rule 23    expression -> IDENTIFIER
Rule 24    expression -> ( expression )
Rule 25    expression -> ADD_OP expression
Rule 26    assignation -> IDENTIFIER = expression
Rule 27    assignation -> IDENTIFIER = couleur
Rule 28    assignation -> IDENTIFIER = pinceau

Terminals, with rules where they appear

(                    : 6 7 8 24
)                    : 6 7 8 24
,                    : 6 6 7 7 7 8 8 8 8 10 10
;                    : 2
=                    : 26 27 28
ADD_OP               : 20 25
COULEUR              : 9
FIGURE               : 7 8
IDENTIFIER           : 12 23 26 27 28
MUL_OP               : 21
NUMBER               : 11 22
PINCEAU              : 6
PRINT                : 18
WHILE                : 19
[                    : 10
]                    : 10
error                : 
{                    : 19
}                    : 19

Nonterminals, with rules where they appear

assignation          : 3
couleur              : 15 27
expression           : 6 7 7 7 7 8 8 8 8 10 10 10 13 18 19 20 20 21 21 24 25 26
figure               : 5
parametre            : 14 16
parametreCouleur     : 6 6
parametrePinceau     : 8
pinceau              : 17 28
programme            : 2 19 0
statement            : 1 2
structure            : 4

Parsing method: LALR

state 0

    (0) S' -> . programme
    (1) programme -> . statement
    (2) programme -> . statement ; programme
    (3) statement -> . assignation
    (4) statement -> . structure
    (5) statement -> . figure
    (18) statement -> . PRINT expression
    (26) assignation -> . IDENTIFIER = expression
    (27) assignation -> . IDENTIFIER = couleur
    (28) assignation -> . IDENTIFIER = pinceau
    (19) structure -> . WHILE expression { programme }
    (7) figure -> . FIGURE ( expression , expression , expression , expression )
    (8) figure -> . FIGURE ( expression , expression , expression , expression , parametrePinceau )

    PRINT           shift and go to state 6
    IDENTIFIER      shift and go to state 7
    WHILE           shift and go to state 8
    FIGURE          shift and go to state 9

    programme                      shift and go to state 1
    statement                      shift and go to state 2
    assignation                    shift and go to state 3
    structure                      shift and go to state 4
    figure                         shift and go to state 5

state 1

    (0) S' -> programme .



state 2

    (1) programme -> statement .
    (2) programme -> statement . ; programme

    $end            reduce using rule 1 (programme -> statement .)
    }               reduce using rule 1 (programme -> statement .)
    ;               shift and go to state 10


state 3

    (3) statement -> assignation .

    ;               reduce using rule 3 (statement -> assignation .)
    $end            reduce using rule 3 (statement -> assignation .)
    }               reduce using rule 3 (statement -> assignation .)


state 4

    (4) statement -> structure .

    ;               reduce using rule 4 (statement -> structure .)
    $end            reduce using rule 4 (statement -> structure .)
    }               reduce using rule 4 (statement -> structure .)


state 5

    (5) statement -> figure .

    ;               reduce using rule 5 (statement -> figure .)
    $end            reduce using rule 5 (statement -> figure .)
    }               reduce using rule 5 (statement -> figure .)


state 6

    (18) statement -> PRINT . expression
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 11

state 7

    (26) assignation -> IDENTIFIER . = expression
    (27) assignation -> IDENTIFIER . = couleur
    (28) assignation -> IDENTIFIER . = pinceau

    =               shift and go to state 16


state 8

    (19) structure -> WHILE . expression { programme }
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 17

state 9

    (7) figure -> FIGURE . ( expression , expression , expression , expression )
    (8) figure -> FIGURE . ( expression , expression , expression , expression , parametrePinceau )

    (               shift and go to state 18


state 10

    (2) programme -> statement ; . programme
    (1) programme -> . statement
    (2) programme -> . statement ; programme
    (3) statement -> . assignation
    (4) statement -> . structure
    (5) statement -> . figure
    (18) statement -> . PRINT expression
    (26) assignation -> . IDENTIFIER = expression
    (27) assignation -> . IDENTIFIER = couleur
    (28) assignation -> . IDENTIFIER = pinceau
    (19) structure -> . WHILE expression { programme }
    (7) figure -> . FIGURE ( expression , expression , expression , expression )
    (8) figure -> . FIGURE ( expression , expression , expression , expression , parametrePinceau )

    PRINT           shift and go to state 6
    IDENTIFIER      shift and go to state 7
    WHILE           shift and go to state 8
    FIGURE          shift and go to state 9

    statement                      shift and go to state 2
    programme                      shift and go to state 19
    assignation                    shift and go to state 3
    structure                      shift and go to state 4
    figure                         shift and go to state 5

state 11

    (18) statement -> PRINT expression .
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ;               reduce using rule 18 (statement -> PRINT expression .)
    $end            reduce using rule 18 (statement -> PRINT expression .)
    }               reduce using rule 18 (statement -> PRINT expression .)
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 12

    (25) expression -> ADD_OP . expression
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 22

state 13

    (22) expression -> NUMBER .

    ADD_OP          reduce using rule 22 (expression -> NUMBER .)
    MUL_OP          reduce using rule 22 (expression -> NUMBER .)
    ;               reduce using rule 22 (expression -> NUMBER .)
    $end            reduce using rule 22 (expression -> NUMBER .)
    }               reduce using rule 22 (expression -> NUMBER .)
    {               reduce using rule 22 (expression -> NUMBER .)
    )               reduce using rule 22 (expression -> NUMBER .)
    ,               reduce using rule 22 (expression -> NUMBER .)
    ]               reduce using rule 22 (expression -> NUMBER .)


state 14

    (23) expression -> IDENTIFIER .

    ADD_OP          reduce using rule 23 (expression -> IDENTIFIER .)
    MUL_OP          reduce using rule 23 (expression -> IDENTIFIER .)
    ;               reduce using rule 23 (expression -> IDENTIFIER .)
    $end            reduce using rule 23 (expression -> IDENTIFIER .)
    }               reduce using rule 23 (expression -> IDENTIFIER .)
    {               reduce using rule 23 (expression -> IDENTIFIER .)
    )               reduce using rule 23 (expression -> IDENTIFIER .)
    ,               reduce using rule 23 (expression -> IDENTIFIER .)
    ]               reduce using rule 23 (expression -> IDENTIFIER .)


state 15

    (24) expression -> ( . expression )
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 23

state 16

    (26) assignation -> IDENTIFIER = . expression
    (27) assignation -> IDENTIFIER = . couleur
    (28) assignation -> IDENTIFIER = . pinceau
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression
    (9) couleur -> . COULEUR
    (10) couleur -> . [ expression , expression , expression ]
    (6) pinceau -> . PINCEAU ( parametreCouleur , parametreCouleur , expression )

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12
    COULEUR         shift and go to state 27
    [               shift and go to state 28
    PINCEAU         shift and go to state 29

    expression                     shift and go to state 24
    couleur                        shift and go to state 25
    pinceau                        shift and go to state 26

state 17

    (19) structure -> WHILE expression . { programme }
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    {               shift and go to state 30
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 18

    (7) figure -> FIGURE ( . expression , expression , expression , expression )
    (8) figure -> FIGURE ( . expression , expression , expression , expression , parametrePinceau )
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 31

state 19

    (2) programme -> statement ; programme .

    $end            reduce using rule 2 (programme -> statement ; programme .)
    }               reduce using rule 2 (programme -> statement ; programme .)


state 20

    (20) expression -> expression ADD_OP . expression
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 32

state 21

    (21) expression -> expression MUL_OP . expression
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 33

state 22

    (25) expression -> ADD_OP expression .
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ADD_OP          reduce using rule 25 (expression -> ADD_OP expression .)
    MUL_OP          reduce using rule 25 (expression -> ADD_OP expression .)
    ;               reduce using rule 25 (expression -> ADD_OP expression .)
    $end            reduce using rule 25 (expression -> ADD_OP expression .)
    }               reduce using rule 25 (expression -> ADD_OP expression .)
    {               reduce using rule 25 (expression -> ADD_OP expression .)
    )               reduce using rule 25 (expression -> ADD_OP expression .)
    ,               reduce using rule 25 (expression -> ADD_OP expression .)
    ]               reduce using rule 25 (expression -> ADD_OP expression .)

  ! ADD_OP          [ shift and go to state 20 ]
  ! MUL_OP          [ shift and go to state 21 ]


state 23

    (24) expression -> ( expression . )
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    )               shift and go to state 34
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 24

    (26) assignation -> IDENTIFIER = expression .
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ;               reduce using rule 26 (assignation -> IDENTIFIER = expression .)
    $end            reduce using rule 26 (assignation -> IDENTIFIER = expression .)
    }               reduce using rule 26 (assignation -> IDENTIFIER = expression .)
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 25

    (27) assignation -> IDENTIFIER = couleur .

    ;               reduce using rule 27 (assignation -> IDENTIFIER = couleur .)
    $end            reduce using rule 27 (assignation -> IDENTIFIER = couleur .)
    }               reduce using rule 27 (assignation -> IDENTIFIER = couleur .)


state 26

    (28) assignation -> IDENTIFIER = pinceau .

    ;               reduce using rule 28 (assignation -> IDENTIFIER = pinceau .)
    $end            reduce using rule 28 (assignation -> IDENTIFIER = pinceau .)
    }               reduce using rule 28 (assignation -> IDENTIFIER = pinceau .)


state 27

    (9) couleur -> COULEUR .

    ;               reduce using rule 9 (couleur -> COULEUR .)
    $end            reduce using rule 9 (couleur -> COULEUR .)
    }               reduce using rule 9 (couleur -> COULEUR .)
    ,               reduce using rule 9 (couleur -> COULEUR .)


state 28

    (10) couleur -> [ . expression , expression , expression ]
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 35

state 29

    (6) pinceau -> PINCEAU . ( parametreCouleur , parametreCouleur , expression )

    (               shift and go to state 36


state 30

    (19) structure -> WHILE expression { . programme }
    (1) programme -> . statement
    (2) programme -> . statement ; programme
    (3) statement -> . assignation
    (4) statement -> . structure
    (5) statement -> . figure
    (18) statement -> . PRINT expression
    (26) assignation -> . IDENTIFIER = expression
    (27) assignation -> . IDENTIFIER = couleur
    (28) assignation -> . IDENTIFIER = pinceau
    (19) structure -> . WHILE expression { programme }
    (7) figure -> . FIGURE ( expression , expression , expression , expression )
    (8) figure -> . FIGURE ( expression , expression , expression , expression , parametrePinceau )

    PRINT           shift and go to state 6
    IDENTIFIER      shift and go to state 7
    WHILE           shift and go to state 8
    FIGURE          shift and go to state 9

    programme                      shift and go to state 37
    statement                      shift and go to state 2
    assignation                    shift and go to state 3
    structure                      shift and go to state 4
    figure                         shift and go to state 5

state 31

    (7) figure -> FIGURE ( expression . , expression , expression , expression )
    (8) figure -> FIGURE ( expression . , expression , expression , expression , parametrePinceau )
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ,               shift and go to state 38
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 32

    (20) expression -> expression ADD_OP expression .
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ADD_OP          reduce using rule 20 (expression -> expression ADD_OP expression .)
    ;               reduce using rule 20 (expression -> expression ADD_OP expression .)
    $end            reduce using rule 20 (expression -> expression ADD_OP expression .)
    }               reduce using rule 20 (expression -> expression ADD_OP expression .)
    {               reduce using rule 20 (expression -> expression ADD_OP expression .)
    )               reduce using rule 20 (expression -> expression ADD_OP expression .)
    ,               reduce using rule 20 (expression -> expression ADD_OP expression .)
    ]               reduce using rule 20 (expression -> expression ADD_OP expression .)
    MUL_OP          shift and go to state 21

  ! MUL_OP          [ reduce using rule 20 (expression -> expression ADD_OP expression .) ]
  ! ADD_OP          [ shift and go to state 20 ]


state 33

    (21) expression -> expression MUL_OP expression .
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ADD_OP          reduce using rule 21 (expression -> expression MUL_OP expression .)
    MUL_OP          reduce using rule 21 (expression -> expression MUL_OP expression .)
    ;               reduce using rule 21 (expression -> expression MUL_OP expression .)
    $end            reduce using rule 21 (expression -> expression MUL_OP expression .)
    }               reduce using rule 21 (expression -> expression MUL_OP expression .)
    {               reduce using rule 21 (expression -> expression MUL_OP expression .)
    )               reduce using rule 21 (expression -> expression MUL_OP expression .)
    ,               reduce using rule 21 (expression -> expression MUL_OP expression .)
    ]               reduce using rule 21 (expression -> expression MUL_OP expression .)

  ! ADD_OP          [ shift and go to state 20 ]
  ! MUL_OP          [ shift and go to state 21 ]


state 34

    (24) expression -> ( expression ) .

    ADD_OP          reduce using rule 24 (expression -> ( expression ) .)
    MUL_OP          reduce using rule 24 (expression -> ( expression ) .)
    ;               reduce using rule 24 (expression -> ( expression ) .)
    $end            reduce using rule 24 (expression -> ( expression ) .)
    }               reduce using rule 24 (expression -> ( expression ) .)
    {               reduce using rule 24 (expression -> ( expression ) .)
    )               reduce using rule 24 (expression -> ( expression ) .)
    ,               reduce using rule 24 (expression -> ( expression ) .)
    ]               reduce using rule 24 (expression -> ( expression ) .)


state 35

    (10) couleur -> [ expression . , expression , expression ]
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ,               shift and go to state 39
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 36

    (6) pinceau -> PINCEAU ( . parametreCouleur , parametreCouleur , expression )
    (14) parametreCouleur -> . parametre
    (15) parametreCouleur -> . couleur
    (11) parametre -> . NUMBER
    (12) parametre -> . IDENTIFIER
    (13) parametre -> . expression
    (9) couleur -> . COULEUR
    (10) couleur -> . [ expression , expression , expression ]
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 44
    IDENTIFIER      shift and go to state 45
    COULEUR         shift and go to state 27
    [               shift and go to state 28
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    parametreCouleur               shift and go to state 40
    expression                     shift and go to state 41
    parametre                      shift and go to state 42
    couleur                        shift and go to state 43

state 37

    (19) structure -> WHILE expression { programme . }

    }               shift and go to state 46


state 38

    (7) figure -> FIGURE ( expression , . expression , expression , expression )
    (8) figure -> FIGURE ( expression , . expression , expression , expression , parametrePinceau )
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 47

state 39

    (10) couleur -> [ expression , . expression , expression ]
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 48

state 40

    (6) pinceau -> PINCEAU ( parametreCouleur . , parametreCouleur , expression )

    ,               shift and go to state 49


state 41

    (13) parametre -> expression .
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ,               reduce using rule 13 (parametre -> expression .)
    )               reduce using rule 13 (parametre -> expression .)
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 42

    (14) parametreCouleur -> parametre .

    ,               reduce using rule 14 (parametreCouleur -> parametre .)


state 43

    (15) parametreCouleur -> couleur .

    ,               reduce using rule 15 (parametreCouleur -> couleur .)


state 44

    (11) parametre -> NUMBER .
    (22) expression -> NUMBER .

  ! reduce/reduce conflict for , resolved using rule 11 (parametre -> NUMBER .)
  ! reduce/reduce conflict for ) resolved using rule 11 (parametre -> NUMBER .)
    ,               reduce using rule 11 (parametre -> NUMBER .)
    )               reduce using rule 11 (parametre -> NUMBER .)
    ADD_OP          reduce using rule 22 (expression -> NUMBER .)
    MUL_OP          reduce using rule 22 (expression -> NUMBER .)

  ! ,               [ reduce using rule 22 (expression -> NUMBER .) ]
  ! )               [ reduce using rule 22 (expression -> NUMBER .) ]


state 45

    (12) parametre -> IDENTIFIER .
    (23) expression -> IDENTIFIER .

  ! reduce/reduce conflict for , resolved using rule 12 (parametre -> IDENTIFIER .)
  ! reduce/reduce conflict for ) resolved using rule 12 (parametre -> IDENTIFIER .)
    ,               reduce using rule 12 (parametre -> IDENTIFIER .)
    )               reduce using rule 12 (parametre -> IDENTIFIER .)
    ADD_OP          reduce using rule 23 (expression -> IDENTIFIER .)
    MUL_OP          reduce using rule 23 (expression -> IDENTIFIER .)

  ! ,               [ reduce using rule 23 (expression -> IDENTIFIER .) ]
  ! )               [ reduce using rule 23 (expression -> IDENTIFIER .) ]


state 46

    (19) structure -> WHILE expression { programme } .

    ;               reduce using rule 19 (structure -> WHILE expression { programme } .)
    $end            reduce using rule 19 (structure -> WHILE expression { programme } .)
    }               reduce using rule 19 (structure -> WHILE expression { programme } .)


state 47

    (7) figure -> FIGURE ( expression , expression . , expression , expression )
    (8) figure -> FIGURE ( expression , expression . , expression , expression , parametrePinceau )
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ,               shift and go to state 50
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 48

    (10) couleur -> [ expression , expression . , expression ]
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ,               shift and go to state 51
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 49

    (6) pinceau -> PINCEAU ( parametreCouleur , . parametreCouleur , expression )
    (14) parametreCouleur -> . parametre
    (15) parametreCouleur -> . couleur
    (11) parametre -> . NUMBER
    (12) parametre -> . IDENTIFIER
    (13) parametre -> . expression
    (9) couleur -> . COULEUR
    (10) couleur -> . [ expression , expression , expression ]
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 44
    IDENTIFIER      shift and go to state 45
    COULEUR         shift and go to state 27
    [               shift and go to state 28
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    parametreCouleur               shift and go to state 52
    expression                     shift and go to state 41
    parametre                      shift and go to state 42
    couleur                        shift and go to state 43

state 50

    (7) figure -> FIGURE ( expression , expression , . expression , expression )
    (8) figure -> FIGURE ( expression , expression , . expression , expression , parametrePinceau )
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 53

state 51

    (10) couleur -> [ expression , expression , . expression ]
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 54

state 52

    (6) pinceau -> PINCEAU ( parametreCouleur , parametreCouleur . , expression )

    ,               shift and go to state 55


state 53

    (7) figure -> FIGURE ( expression , expression , expression . , expression )
    (8) figure -> FIGURE ( expression , expression , expression . , expression , parametrePinceau )
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ,               shift and go to state 56
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 54

    (10) couleur -> [ expression , expression , expression . ]
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    ]               shift and go to state 57
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 55

    (6) pinceau -> PINCEAU ( parametreCouleur , parametreCouleur , . expression )
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 58

state 56

    (7) figure -> FIGURE ( expression , expression , expression , . expression )
    (8) figure -> FIGURE ( expression , expression , expression , . expression , parametrePinceau )
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 13
    IDENTIFIER      shift and go to state 14
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 59

state 57

    (10) couleur -> [ expression , expression , expression ] .

    ;               reduce using rule 10 (couleur -> [ expression , expression , expression ] .)
    $end            reduce using rule 10 (couleur -> [ expression , expression , expression ] .)
    }               reduce using rule 10 (couleur -> [ expression , expression , expression ] .)
    ,               reduce using rule 10 (couleur -> [ expression , expression , expression ] .)


state 58

    (6) pinceau -> PINCEAU ( parametreCouleur , parametreCouleur , expression . )
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    )               shift and go to state 60
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 59

    (7) figure -> FIGURE ( expression , expression , expression , expression . )
    (8) figure -> FIGURE ( expression , expression , expression , expression . , parametrePinceau )
    (20) expression -> expression . ADD_OP expression
    (21) expression -> expression . MUL_OP expression

    )               shift and go to state 62
    ,               shift and go to state 61
    ADD_OP          shift and go to state 20
    MUL_OP          shift and go to state 21


state 60

    (6) pinceau -> PINCEAU ( parametreCouleur , parametreCouleur , expression ) .

    ;               reduce using rule 6 (pinceau -> PINCEAU ( parametreCouleur , parametreCouleur , expression ) .)
    $end            reduce using rule 6 (pinceau -> PINCEAU ( parametreCouleur , parametreCouleur , expression ) .)
    }               reduce using rule 6 (pinceau -> PINCEAU ( parametreCouleur , parametreCouleur , expression ) .)
    )               reduce using rule 6 (pinceau -> PINCEAU ( parametreCouleur , parametreCouleur , expression ) .)


state 61

    (8) figure -> FIGURE ( expression , expression , expression , expression , . parametrePinceau )
    (16) parametrePinceau -> . parametre
    (17) parametrePinceau -> . pinceau
    (11) parametre -> . NUMBER
    (12) parametre -> . IDENTIFIER
    (13) parametre -> . expression
    (6) pinceau -> . PINCEAU ( parametreCouleur , parametreCouleur , expression )
    (20) expression -> . expression ADD_OP expression
    (21) expression -> . expression MUL_OP expression
    (22) expression -> . NUMBER
    (23) expression -> . IDENTIFIER
    (24) expression -> . ( expression )
    (25) expression -> . ADD_OP expression

    NUMBER          shift and go to state 44
    IDENTIFIER      shift and go to state 45
    PINCEAU         shift and go to state 29
    (               shift and go to state 15
    ADD_OP          shift and go to state 12

    expression                     shift and go to state 41
    parametrePinceau               shift and go to state 63
    parametre                      shift and go to state 64
    pinceau                        shift and go to state 65

state 62

    (7) figure -> FIGURE ( expression , expression , expression , expression ) .

    ;               reduce using rule 7 (figure -> FIGURE ( expression , expression , expression , expression ) .)
    $end            reduce using rule 7 (figure -> FIGURE ( expression , expression , expression , expression ) .)
    }               reduce using rule 7 (figure -> FIGURE ( expression , expression , expression , expression ) .)


state 63

    (8) figure -> FIGURE ( expression , expression , expression , expression , parametrePinceau . )

    )               shift and go to state 66


state 64

    (16) parametrePinceau -> parametre .

    )               reduce using rule 16 (parametrePinceau -> parametre .)


state 65

    (17) parametrePinceau -> pinceau .

    )               reduce using rule 17 (parametrePinceau -> pinceau .)


state 66

    (8) figure -> FIGURE ( expression , expression , expression , expression , parametrePinceau ) .

    ;               reduce using rule 8 (figure -> FIGURE ( expression , expression , expression , expression , parametrePinceau ) .)
    $end            reduce using rule 8 (figure -> FIGURE ( expression , expression , expression , expression , parametrePinceau ) .)
    }               reduce using rule 8 (figure -> FIGURE ( expression , expression , expression , expression , parametrePinceau ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 44 resolved using rule (parametre -> NUMBER)
WARNING: rejected rule (expression -> NUMBER) in state 44
WARNING: reduce/reduce conflict in state 45 resolved using rule (parametre -> IDENTIFIER)
WARNING: rejected rule (expression -> IDENTIFIER) in state 45
