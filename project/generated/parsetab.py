
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSADD_OP COULEUR FIGURE IDENTIFIER MUL_OP NUMBER PRINT WHILE programme : statement  programme : statement ';' programme  statement : assignation\n        | structure \n        | figure figure : FIGURE '(' parametre ',' parametre ',' parametre ',' parametre ')'  figure : FIGURE '(' parametre ',' parametre ',' parametre ',' parametre ',' couleur ')'  couleur : COULEUR \n        | '[' parametre ',' parametre ',' parametre ']'  parametre : NUMBER\n        | IDENTIFIER statement : PRINT expression  structure : WHILE expression '{' programme '}' expression : expression ADD_OP expression\n            | expression MUL_OP expressionexpression : NUMBER\n        | IDENTIFIER expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS assignation : IDENTIFIER '=' expression "
    
_lr_action_items = {'PRINT':([0,10,25,],[6,6,6,]),'IDENTIFIER':([0,6,8,10,12,15,16,18,20,21,25,33,36,38,44,47,49,],[7,14,14,7,14,14,14,28,14,14,7,28,28,28,28,28,28,]),'WHILE':([0,10,25,],[8,8,8,]),'FIGURE':([0,10,25,],[9,9,9,]),'$end':([1,2,3,4,5,11,13,14,19,22,24,29,30,31,34,41,45,],[0,-1,-3,-4,-5,-12,-16,-17,-2,-19,-20,-14,-15,-18,-13,-6,-7,]),'}':([2,3,4,5,11,13,14,19,22,24,29,30,31,32,34,41,45,],[-1,-3,-4,-5,-12,-16,-17,-2,-19,-20,-14,-15,-18,34,-13,-6,-7,]),';':([2,3,4,5,11,13,14,22,24,29,30,31,34,41,45,],[10,-3,-4,-5,-12,-16,-17,-19,-20,-14,-15,-18,-13,-6,-7,]),'NUMBER':([6,8,12,15,16,18,20,21,33,36,38,44,47,49,],[13,13,13,13,13,27,13,13,27,27,27,27,27,27,]),'(':([6,8,9,12,15,16,20,21,],[15,15,18,15,15,15,15,15,]),'ADD_OP':([6,8,11,12,13,14,15,16,17,20,21,22,23,24,29,30,31,],[12,12,20,12,-16,-17,12,12,20,12,12,-19,20,20,-14,-15,-18,]),'=':([7,],[16,]),'MUL_OP':([11,13,14,17,22,23,24,29,30,31,],[21,-16,-17,21,-19,21,21,21,-15,-18,]),'{':([13,14,17,22,29,30,31,],[-16,-17,25,-19,-14,-15,-18,]),')':([13,14,22,23,27,28,29,30,31,39,42,43,51,],[-16,-17,-19,31,-10,-11,-14,-15,-18,41,45,-8,-9,]),',':([26,27,28,35,37,39,46,48,],[33,-10,-11,36,38,40,47,49,]),']':([27,28,50,],[-10,-11,51,]),'COULEUR':([40,],[43,]),'[':([40,],[44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,10,25,],[1,19,32,]),'statement':([0,10,25,],[2,2,2,]),'assignation':([0,10,25,],[3,3,3,]),'structure':([0,10,25,],[4,4,4,]),'figure':([0,10,25,],[5,5,5,]),'expression':([6,8,12,15,16,20,21,],[11,17,22,23,24,29,30,]),'parametre':([18,33,36,38,44,47,49,],[26,35,37,39,46,48,50,]),'couleur':([40,],[42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser5.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',17),
  ('statement -> structure','statement',1,'p_statement','parser5.py',18),
  ('statement -> figure','statement',1,'p_statement','parser5.py',19),
  ('figure -> FIGURE ( parametre , parametre , parametre , parametre )','figure',10,'p_figure','parser5.py',23),
  ('figure -> FIGURE ( parametre , parametre , parametre , parametre , couleur )','figure',12,'p_figure_couleur','parser5.py',27),
  ('couleur -> COULEUR','couleur',1,'p_couleur','parser5.py',31),
  ('couleur -> [ parametre , parametre , parametre ]','couleur',7,'p_couleur','parser5.py',32),
  ('parametre -> NUMBER','parametre',1,'p_parametre','parser5.py',39),
  ('parametre -> IDENTIFIER','parametre',1,'p_parametre','parser5.py',40),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',44),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser5.py',48),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',52),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',53),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',57),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',58),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',62),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',66),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',70),
]
