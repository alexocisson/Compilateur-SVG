
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSADD_OP FIGURE IDENTIFIER MUL_OP NUMBER PRINT WHILE programme : statement  programme : statement ';' programme  statement : assignation\n        | structure \n        | figure figure : FIGURE '(' parametre ',' parametre ',' parametre ',' parametre ')'  parametre : NUMBER\n        | IDENTIFIER statement : PRINT expression  structure : WHILE expression '{' programme '}' expression : expression ADD_OP expression\n            | expression MUL_OP expressionexpression : NUMBER\n        | IDENTIFIER expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS assignation : IDENTIFIER '=' expression "
    
_lr_action_items = {'PRINT':([0,10,25,],[6,6,6,]),'IDENTIFIER':([0,6,8,10,12,15,16,18,20,21,25,33,36,38,],[7,14,14,7,14,14,14,28,14,14,7,28,28,28,]),'WHILE':([0,10,25,],[8,8,8,]),'FIGURE':([0,10,25,],[9,9,9,]),'$end':([1,2,3,4,5,11,13,14,19,22,24,29,30,31,34,40,],[0,-1,-3,-4,-5,-9,-13,-14,-2,-16,-17,-11,-12,-15,-10,-6,]),'}':([2,3,4,5,11,13,14,19,22,24,29,30,31,32,34,40,],[-1,-3,-4,-5,-9,-13,-14,-2,-16,-17,-11,-12,-15,34,-10,-6,]),';':([2,3,4,5,11,13,14,22,24,29,30,31,34,40,],[10,-3,-4,-5,-9,-13,-14,-16,-17,-11,-12,-15,-10,-6,]),'NUMBER':([6,8,12,15,16,18,20,21,33,36,38,],[13,13,13,13,13,27,13,13,27,27,27,]),'(':([6,8,9,12,15,16,20,21,],[15,15,18,15,15,15,15,15,]),'ADD_OP':([6,8,11,12,13,14,15,16,17,20,21,22,23,24,29,30,31,],[12,12,20,12,-13,-14,12,12,20,12,12,-16,20,20,-11,-12,-15,]),'=':([7,],[16,]),'MUL_OP':([11,13,14,17,22,23,24,29,30,31,],[21,-13,-14,21,-16,21,21,21,-12,-15,]),'{':([13,14,17,22,29,30,31,],[-13,-14,25,-16,-11,-12,-15,]),')':([13,14,22,23,27,28,29,30,31,39,],[-13,-14,-16,31,-7,-8,-11,-12,-15,40,]),',':([26,27,28,35,37,],[33,-7,-8,36,38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,10,25,],[1,19,32,]),'statement':([0,10,25,],[2,2,2,]),'assignation':([0,10,25,],[3,3,3,]),'structure':([0,10,25,],[4,4,4,]),'figure':([0,10,25,],[5,5,5,]),'expression':([6,8,12,15,16,20,21,],[11,17,22,23,24,29,30,]),'parametre':([18,33,36,38,],[26,35,37,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser5.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',17),
  ('statement -> structure','statement',1,'p_statement','parser5.py',18),
  ('statement -> figure','statement',1,'p_statement','parser5.py',19),
  ('figure -> FIGURE ( parametre , parametre , parametre , parametre )','figure',10,'p_figure','parser5.py',23),
  ('parametre -> NUMBER','parametre',1,'p_parametre','parser5.py',27),
  ('parametre -> IDENTIFIER','parametre',1,'p_parametre','parser5.py',28),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',32),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser5.py',36),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',40),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',41),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',45),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',46),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',50),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',54),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',58),
]
